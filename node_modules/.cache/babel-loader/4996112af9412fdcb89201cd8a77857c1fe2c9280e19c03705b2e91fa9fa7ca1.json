{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/react-dms2/src/components/NeoEmployees.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { EmployeeCard } from \"./EmployeeCard\";\nimport { deleteEmployeeById, getAllEmployees, getEmployeesByName } from \"../model/EmployeeCRUD\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NeoEmployees() {\n  _s();\n  const nameNode = useRef();\n  // const data=useLoaderData();\n  let [employees, setEmployees] = useState(data);\n  let [errorMessage, setMessage] = useState(\"\");\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const data = await getAllEmployees();\n        setEmployees(data);\n      } catch (error) {\n        setError('Failed to fetch employees');\n      }\n    };\n    fetchEmployees();\n  }, []); // Fetch data once when the component mounts\n\n  async function getEmps() {\n    const data = await getAllEmployees();\n    setEmployees(data);\n  }\n  async function deleteEmployee(_id) {\n    const ans = window.confirm(\"Do you really want to delete?\");\n    if (ans) {\n      const data = await deleteEmployeeById(_id);\n      window.alert(\"Employee deleted successfully....\");\n      getEmps();\n    }\n  }\n  async function searchEmp(emp_name) {\n    if (emp_name !== \"\") {\n      const data = await getEmployeesByName(emp_name);\n      if (data.length > 0) setEmployees(data);else setMessage(\"NOT FOUND\");\n    } else {\n      setMessage(\"\");\n      setEmployees(data);\n    }\n  }\n  useEffect(() => {\n    //    console.log(employees);\n    //    getEmps();\n  } /* ,[] */);\n  const employeeCards = employees.map((employee, i) => /*#__PURE__*/_jsxDEV(EmployeeCard, {\n    employee: employee,\n    deleteEmployee: deleteEmployee\n  }, 'e' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 54\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-12 pt-5 pb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-header\",\n              children: \"All Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"m-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Employee name to search:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ref: nameNode,\n                  onKeyUp: () => searchEmp(nameNode.current.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger text-bold\",\n                  children: [\" \", errorMessage]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: employeeCards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(NeoEmployees, \"s4F18W7jVLK71NtVU2apDs3I2Qk=\");\n_c = NeoEmployees;\nvar _c;\n$RefreshReg$(_c, \"NeoEmployees\");","map":{"version":3,"names":["useEffect","useRef","useState","EmployeeCard","deleteEmployeeById","getAllEmployees","getEmployeesByName","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","NeoEmployees","_s","nameNode","employees","setEmployees","data","errorMessage","setMessage","fetchEmployees","error","setError","getEmps","deleteEmployee","_id","ans","window","confirm","alert","searchEmp","emp_name","length","employeeCards","map","employee","i","fileName","_jsxFileName","lineNumber","columnNumber","children","class","className","type","ref","onKeyUp","current","value","_c","$RefreshReg$"],"sources":["/home/neosoft/Desktop/react-dms2/src/components/NeoEmployees.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { EmployeeCard } from \"./EmployeeCard\";\nimport { deleteEmployeeById, getAllEmployees, getEmployeesByName } from \"../model/EmployeeCRUD\";\nimport { useLoaderData } from \"react-router-dom\";\n\n\nexport function NeoEmployees(){\n    const nameNode=useRef();\n    // const data=useLoaderData();\n    let [employees, setEmployees]=useState(data); \n    let [errorMessage, setMessage]=useState(\"\");\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const data = await getAllEmployees();\n                setEmployees(data);\n            } catch (error) {\n                setError('Failed to fetch employees');\n            }\n        };\n\n        fetchEmployees();\n    }, []); // Fetch data once when the component mounts\n\n\n\n    async function getEmps(){\n        const data=await getAllEmployees();\n        setEmployees(data);\n    }\n    async function deleteEmployee(_id){\n        const ans=window.confirm(\"Do you really want to delete?\");\n        if(ans){\n            const data=await deleteEmployeeById(_id);\n            window.alert(\"Employee deleted successfully....\");\n            getEmps();    \n        }\n    }  \n    async function  searchEmp(emp_name){\n        if(emp_name!==\"\")\n        {\n            const data=await getEmployeesByName(emp_name);\n            if(data.length>0)\n                setEmployees(data);\n            else\n                setMessage(\"NOT FOUND\");\n        }\n        else{\n            setMessage(\"\");\n            setEmployees(data);\n        }\n            \n            \n    }\n    useEffect(()=>{ \n    //    console.log(employees);\n    //    getEmps();\n    }/* ,[] */)\n\n    const employeeCards=employees.map((employee, i)=><EmployeeCard key={'e'+i} employee={employee} deleteEmployee={deleteEmployee}></EmployeeCard>)\n    return(\n        <>\n        <div class=\"container\">\n            <div class=\"row justify-content-center\">\n                <div class=\"col-md-12 pt-5 pb-5\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">All Employees</div>\n\n                        <div class=\"card-body\">\n                            <section className=\"m-2\">\n                                <label>Employee name to search:</label>\n                                <input type=\"text\" ref={nameNode} onKeyUp={()=>searchEmp(nameNode.current.value)}></input>\n                                <span className=\"text-danger text-bold\"> {errorMessage}</span>\n                            </section>\n                            <div className=\"row\">\n                                {employeeCards}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n      \n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}