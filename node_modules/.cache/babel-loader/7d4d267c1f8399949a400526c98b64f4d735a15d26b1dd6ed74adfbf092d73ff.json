{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./app/App';import reportWebVitals from'./reportWebVitals';import\"../node_modules/bootstrap/dist/css/bootstrap.min.css\";import\"../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\";import{createBrowserRouter,redirect,RouterProvider}from'react-router-dom';import{NeoEmployees}from'./components/NeoEmployees.js';import{Home}from'./components/Home.js';import{EmployeeForm}from'./components/EmployeeForm.js';import{AdminLogin}from'./components/AdminLogin.js';import{getAllEmployees,getEmployeeById}from'./model/EmployeeCRUD.js';import{FileUpload}from'./components/FileUpload.js';import{jsx as _jsx}from\"react/jsx-runtime\";const childRoutes=[{path:\"/\",loader:()=>redirect('home')},{path:'employees',element:/*#__PURE__*/_jsx(NeoEmployees,{}),loader:async()=>{return await getAllEmployees();}},{path:'home',element:/*#__PURE__*/_jsx(Home,{})},{path:'addemployee',element:/*#__PURE__*/_jsx(EmployeeForm,{})},{path:'editemployee/:_id',/* _id : it will hold router parameter */element:/*#__PURE__*/_jsx(EmployeeForm,{}),loader:async _ref=>{let{params}=_ref;return await getEmployeeById(params._id);}},{path:'adminlogin',element:/*#__PURE__*/_jsx(AdminLogin,{})},{path:'editpic/:_id',element:/*#__PURE__*/_jsx(FileUpload,{})}];const rootRoutes=[{path:'/',element:/*#__PURE__*/_jsx(App,{}),children:childRoutes}];const employeesrouter=createBrowserRouter(rootRoutes);const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(RouterProvider,{router:employeesrouter}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","createBrowserRouter","redirect","RouterProvider","NeoEmployees","Home","EmployeeForm","AdminLogin","getAllEmployees","getEmployeeById","FileUpload","jsx","_jsx","childRoutes","path","loader","element","_ref","params","_id","rootRoutes","children","employeesrouter","root","createRoot","document","getElementById","render","router"],"sources":["/home/neosoft/Desktop/react-dms2/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\"\nimport { createBrowserRouter, redirect, RouterProvider } from 'react-router-dom';\nimport { NeoEmployees } from './components/NeoEmployees.js';\nimport { Home } from './components/Home.js';\nimport { EmployeeForm } from './components/EmployeeForm.js';\nimport { AdminLogin } from './components/AdminLogin.js';\nimport { getAllEmployees, getEmployeeById } from './model/EmployeeCRUD.js';\nimport { FileUpload } from './components/FileUpload.js';\n\nconst childRoutes=[\n    {\n        path:\"/\",\n        loader:()=>redirect('home') \n    },\n    {\n        path:'employees',\n        element:<NeoEmployees></NeoEmployees>,\n        loader:async ()=>{\n            return await getAllEmployees();\n        }\n    },\n    {\n        path:'home',\n        element:<Home></Home>,\n    },\n    {\n        path:'addemployee',\n        element:<EmployeeForm></EmployeeForm>\n    },\n    {\n        path:'editemployee/:_id', /* _id : it will hold router parameter */\n        element:<EmployeeForm></EmployeeForm>,\n        loader:async ({params})=>{\n            return await getEmployeeById(params._id);\n        }\n    },\n    {\n        path:'adminlogin',\n        element:<AdminLogin></AdminLogin>\n    },\n    {\n        path:'editpic/:_id',\n        element:<FileUpload></FileUpload>\n    }\n]\nconst rootRoutes=[\n    {\n        path:'/',\n        element: <App />,\n        children:childRoutes\n    }\n]\nconst employeesrouter=createBrowserRouter(rootRoutes);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <RouterProvider router={employeesrouter}></RouterProvider>\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,WAAW,CAC3B,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,sDAAsD,CAC7D,MAAO,2DAA2D,CAClE,OAASC,mBAAmB,CAAEC,QAAQ,CAAEC,cAAc,KAAQ,kBAAkB,CAChF,OAASC,YAAY,KAAQ,8BAA8B,CAC3D,OAASC,IAAI,KAAQ,sBAAsB,CAC3C,OAASC,YAAY,KAAQ,8BAA8B,CAC3D,OAASC,UAAU,KAAQ,4BAA4B,CACvD,OAASC,eAAe,CAAEC,eAAe,KAAQ,yBAAyB,CAC1E,OAASC,UAAU,KAAQ,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExD,KAAM,CAAAC,WAAW,CAAC,CACd,CACIC,IAAI,CAAC,GAAG,CACRC,MAAM,CAACA,CAAA,GAAIb,QAAQ,CAAC,MAAM,CAC9B,CAAC,CACD,CACIY,IAAI,CAAC,WAAW,CAChBE,OAAO,cAACJ,IAAA,CAACR,YAAY,GAAe,CAAC,CACrCW,MAAM,CAAC,KAAAA,CAAA,GAAU,CACb,MAAO,MAAM,CAAAP,eAAe,CAAC,CAAC,CAClC,CACJ,CAAC,CACD,CACIM,IAAI,CAAC,MAAM,CACXE,OAAO,cAACJ,IAAA,CAACP,IAAI,GAAO,CACxB,CAAC,CACD,CACIS,IAAI,CAAC,aAAa,CAClBE,OAAO,cAACJ,IAAA,CAACN,YAAY,GAAe,CACxC,CAAC,CACD,CACIQ,IAAI,CAAC,mBAAmB,CAAE,yCAC1BE,OAAO,cAACJ,IAAA,CAACN,YAAY,GAAe,CAAC,CACrCS,MAAM,CAAC,MAAAE,IAAA,EAAkB,IAAX,CAACC,MAAM,CAAC,CAAAD,IAAA,CAClB,MAAO,MAAM,CAAAR,eAAe,CAACS,MAAM,CAACC,GAAG,CAAC,CAC5C,CACJ,CAAC,CACD,CACIL,IAAI,CAAC,YAAY,CACjBE,OAAO,cAACJ,IAAA,CAACL,UAAU,GAAa,CACpC,CAAC,CACD,CACIO,IAAI,CAAC,cAAc,CACnBE,OAAO,cAACJ,IAAA,CAACF,UAAU,GAAa,CACpC,CAAC,CACJ,CACD,KAAM,CAAAU,UAAU,CAAC,CACb,CACIN,IAAI,CAAC,GAAG,CACRE,OAAO,cAAEJ,IAAA,CAACb,GAAG,GAAE,CAAC,CAChBsB,QAAQ,CAACR,WACb,CAAC,CACJ,CACD,KAAM,CAAAS,eAAe,CAACrB,mBAAmB,CAACmB,UAAU,CAAC,CAErD,KAAM,CAAAG,IAAI,CAAGzB,QAAQ,CAAC0B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACPf,IAAA,CAACT,cAAc,EAACyB,MAAM,CAAEN,eAAgB,CAAiB,CAC7D,CAAC,CACD;AACA;AACA;AACAtB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}